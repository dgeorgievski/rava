apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations:
    tekton.dev/categories: Code Quality
    tekton.dev/displayName: golangci lint
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: lint
  labels:
    5g-core.casa-systems.com/taskType: lint
    app.kubernetes.io/instance: tekton-catalog
    app.kubernetes.io/version: 0.2.0
  name: golangci-lint
  namespace: dimitar
spec:
  description: This Task is Golang task to validate Go projects.
  params:
  - description: base package (and its children) under validation
    name: package
    type: string
  - default: .
    description: path to the directory to use as context.
    name: context
    type: string
  - default: --verbose
    description: flags to use for the test command
    name: flags
    type: string
  - default: v1.39
    description: golangci-lint version to use
    name: version
    type: string
  - default: linux
    description: running operating system target
    name: GOOS
    type: string
  - default: amd64
    description: running architecture target
    name: GOARCH
    type: string
  - default: auto
    description: value of module support
    name: GO111MODULE
    type: string
  - default: ""
    description: Go caching directory path
    name: GOCACHE
    type: string
  - default: ""
    description: Go mod caching directory path
    name: GOMODCACHE
    type: string
  - default: ""
    description: golangci-lint cache path
    name: GOLANGCI_LINT_CACHE
    type: string
  - default: "false"
    description: |
      When always-pass is set to "true", the task will pass (return 0).
      The linter report will still be generated.
      This option exists to allow intergrating projects into our pipelines
      that would fail the strict default conditions of this linter.
    name: always-pass
    type: string
  steps:
  - computeResources: {}
    env:
    - name: GOPATH
      value: /workspace
    - name: GOOS
      value: $(params.GOOS)
    - name: GOARCH
      value: $(params.GOARCH)
    - name: GO111MODULE
      value: $(params.GO111MODULE)
    - name: GOCACHE
      value: $(params.GOCACHE)
    - name: GOMODCACHE
      value: $(params.GOMODCACHE)
    - name: GOLANGCI_LINT_CACHE
      value: $(params.GOLANGCI_LINT_CACHE)
    - name: ALWAYS_PASS
      value: $(params.always-pass)
    image: docker.io/golangci/golangci-lint:$(params.version)
    name: lint
    script: |
      golangci-lint run $(params.flags)

      # TODO: fix this
      #echo "next"
      #if [ "${ALWAYS_PASS}" = "true" ] ; then
      #  echo "hello"
      #  exit 0
      #fi
    workingDir: $(workspaces.source.path)/$(params.context)
  workspaces:
  - mountPath: /workspace/src/$(params.package)
    name: source
