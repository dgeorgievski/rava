apiVersion: tekton.dev/v1
kind: Task
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/instance: vzw-tekton-server-catalog
    app.kubernetes.io/version: 0.1.0
    testing.casa-systems.com/type: helper
  name: pipeline-lock-manage
  namespace: dimitar
spec:
  description: |-
    Acquires, renews, and releases the Lease the constitutes the lock that
    prevents running PipelineRuns in parallel when when those PipelineRuns
    are acting on shared resources
  params:
  - default: ""
    description: Label selector to identify the PipelineRuns we should wait for
    name: selector
    type: string
  - default: ""
    description: Field selector to identify the PipelineRuns we should wait for
    name: field-selector
    type: string
  - default: 5s
    description: Interval between checks for running PipelineRuns
    name: interval
    type: string
  - default: "15"
    description: The duration we will hold the Lease each time it is acquired/renewed
    name: lease-duration-seconds
    type: string
  - description: Git project name
    name: project
    type: string
  - default: 5m
    description: Maximum duration for waiting for running PipelineRuns
    name: timeout
    type: string
  - default: "true"
    description: Add the Tekton Trigger Event ID to the list of label selectors
    name: use-event-id
    type: string
  - default: registry.gitlab.casa-systems.com/mate.szalai/pipeline-lock/tekton-pipeline-lock:latest
    description: Pipeline Lock image
    name: image
    type: string
  steps:
  - args:
    - --field-selector=$(params.field-selector)
    - --lease-duration-seconds=$(params.lease-duration-seconds)
    - --interval=$(params.interval)
    - --project=$(params.project)
    - --selector=$(params.selector)
    - --timeout=$(params.timeout)
    - --use-event-id=$(params.use-event-id)
    command:
    - /pipeline-lock
    - manage
    computeResources:
      limits:
        cpu: 200m
        memory: 100Mi
      requests:
        cpu: 10m
        memory: 10Mi
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    image: $(params.image)
    imagePullPolicy: Always
    name: pipeline-lock
